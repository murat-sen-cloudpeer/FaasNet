{"version":3,"file":"EvtMeshClient.cs.js","sources":["../../template/AsyncapiEventMeshClient/EvtMeshClient.cs.js"],"sourcesContent":["import _ from 'lodash';\r\nimport { File } from '@asyncapi/generator-react-sdk';\r\nimport { Channel } from '@asyncapi/parser';\r\nimport { FormatHelpers } from '@asyncapi/modelina';\r\n\r\nfunction getChannelWrappers(channels) {\r\n\tconst channelWrappers = [];\r\n\tfor (const [channelName, channel] of channels) {\r\n\t\tconst channelParameterEntries = Object.entries(channel.parameters());\r\n\t\tif (channel.hasSubscribe()) {\r\n\t\t\tconst message = channel.subscribe().message(0);\r\n\t\t\tconst messageType = FormatHelpers.toPascalCase(message.payload().uid());\r\n\t\t\tlet msg = _.camelCase(channelName);\r\n\t\t\tmsg = msg.charAt(0).toUpperCase() + msg.slice(1);\r\n\t\t\tconst record = `\r\n\t\t\tpublic Task<SubscriptionResult> Subscribe${msg}(Action<${messageType}> callback, CancellationToken cancellationToken = default(CancellationToken))\r\n\t\t\t{\r\n\t\t\t\treturn SubscribeMessages(\"${channelName}\", callback, cancellationToken);\r\n\t\t\t}\r\n\t\t\t`;\r\n\t\t\tchannelWrappers.push(record);\r\n\t\t}\r\n\t\t\r\n\t\tif (channel.hasPublish()) {\r\n\t\t\tconst message = channel.publish().message(0);\r\n\t\t\tconst messageType = FormatHelpers.toPascalCase(message.payload().uid());\r\n\t\t\tconst record = `\r\n\t\t\tpublic Task Publish(${messageType} parameter, CancellationToken cancellationToken = default(CancellationToken))\r\n\t\t\t{\r\n\t\t\t\tconst string topicName = \"${channelName}\";\t\t\t\t\r\n\t\t\t\tvar cloudEvt = new CloudEvent\r\n\t\t\t\t{\r\n\t\t\t\t\tId = Guid.NewGuid().ToString(),\r\n\t\t\t\t\tSubject = topicName,\r\n\t\t\t\t\tSource = new Uri(parameter.Source),\r\n\t\t\t\t\tType = parameter.Type,\r\n\t\t\t\t\tDataContentType = \"application/json\",\r\n\t\t\t\t\tData = JsonSerializer.Serialize(parameter),\r\n\t\t\t\t\tTime = DateTimeOffset.UtcNow\r\n\t\t\t\t};\r\n\t\t\t\treturn Publish(topicName, cloudEvt, cancellationToken);\r\n\t\t\t}\r\n\t\t\t`;\r\n\t\t\tchannelWrappers.push(record);\r\n\t\t}\r\n\t}\r\n  \r\n\treturn channelWrappers;\r\n}\r\n\r\nexport default function evtMeshClient({ asyncapi }) {\r\n  const channelIterator = Object.entries(asyncapi.channels());\r\n  const channels = getChannelWrappers(channelIterator);\r\n  return <File name={'EvtMeshClient.cs'}>\r\n    {\r\n      `using AsyncapiEventMeshClient.Models;\r\nusing CloudNative.CloudEvents;\r\nusing FaasNet.EventMesh.Client;\r\nusing System;\r\nusing System.Text.Json;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace AsyncapiEventMeshClient\r\n{\r\n\tpublic class EvtMeshClient : EventMeshClient\r\n\t{\r\n\t\tpublic EvtMeshClient(string clientId, string password, string vpn = Constants.DefaultVpn, string url = Constants.DefaultUrl, int port = Constants.DefaultPort, int bufferCloudEvents = 1) : base(clientId, password, vpn, url, port, bufferCloudEvents) { }\r\n\t\r\n\t\t${channels.join('\\n')}\r\n\t}\r\n}`\r\n    }\r\n  </File>;\r\n}"],"names":["getChannelWrappers","channels","channelWrappers","channelName","channel","Object","entries","parameters","hasSubscribe","message","subscribe","messageType","FormatHelpers","toPascalCase","payload","uid","msg","_","camelCase","charAt","toUpperCase","slice","record","push","hasPublish","publish","evtMeshClient","asyncapi","channelIterator","_jsx","File","join"],"mappings":";;;;;;;;;;;;;AAKA,SAASA,kBAAT,CAA4BC,QAA5B,EAAsC;AACrC,EAAMC,MAAAA,eAAe,GAAG,EAAxB,CAAA;;AACA,EAAK,KAAA,MAAM,CAACC,WAAD,EAAcC,OAAd,CAAX,IAAqCH,QAArC,EAA+C;AAC9C,IAAgCI,MAAM,CAACC,OAAP,CAAeF,OAAO,CAACG,UAAR,EAAf,EAAhC;;AACA,IAAA,IAAIH,OAAO,CAACI,YAAR,EAAJ,EAA4B;AAC3B,MAAMC,MAAAA,OAAO,GAAGL,OAAO,CAACM,SAAR,EAAoBD,CAAAA,OAApB,CAA4B,CAA5B,CAAhB,CAAA;AACA,MAAA,MAAME,WAAW,GAAGC,sBAAa,CAACC,YAAd,CAA2BJ,OAAO,CAACK,OAAR,EAAA,CAAkBC,GAAlB,EAA3B,CAApB,CAAA;;AACA,MAAA,IAAIC,GAAG,GAAGC,qBAAC,CAACC,SAAF,CAAYf,WAAZ,CAAV,CAAA;;AACAa,MAAAA,GAAG,GAAGA,GAAG,CAACG,MAAJ,CAAW,CAAX,CAAcC,CAAAA,WAAd,KAA8BJ,GAAG,CAACK,KAAJ,CAAU,CAAV,CAApC,CAAA;AACA,MAAA,MAAMC,MAAM,GAAI,CAAA;AACnB,4CAA8CN,EAAAA,GAAI,WAAUL,WAAY,CAAA;AACxE;AACA,8BAAA,EAAgCR,WAAY,CAAA;AAC5C;AACA,GALG,CAAA,CAAA;AAMAD,MAAAA,eAAe,CAACqB,IAAhB,CAAqBD,MAArB,CAAA,CAAA;AACA,KAAA;;AAED,IAAA,IAAIlB,OAAO,CAACoB,UAAR,EAAJ,EAA0B;AACzB,MAAMf,MAAAA,OAAO,GAAGL,OAAO,CAACqB,OAAR,EAAkBhB,CAAAA,OAAlB,CAA0B,CAA1B,CAAhB,CAAA;AACA,MAAA,MAAME,WAAW,GAAGC,sBAAa,CAACC,YAAd,CAA2BJ,OAAO,CAACK,OAAR,EAAA,CAAkBC,GAAlB,EAA3B,CAApB,CAAA;AACA,MAAA,MAAMO,MAAM,GAAI,CAAA;AACnB,uBAAA,EAAyBX,WAAY,CAAA;AACrC;AACA,8BAAA,EAAgCR,WAAY,CAAA;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAhBG,CAAA,CAAA;AAiBAD,MAAAA,eAAe,CAACqB,IAAhB,CAAqBD,MAArB,CAAA,CAAA;AACA,KAAA;AACD,GAAA;;AAED,EAAA,OAAOpB,eAAP,CAAA;AACA,CAAA;;AAEc,SAASwB,aAAT,CAAuB;AAAEC,EAAAA,QAAAA;AAAF,CAAvB,EAAqC;AAClD,EAAMC,MAAAA,eAAe,GAAGvB,MAAM,CAACC,OAAP,CAAeqB,QAAQ,CAAC1B,QAAT,EAAf,CAAxB,CAAA;AACA,EAAA,MAAMA,QAAQ,GAAGD,kBAAkB,CAAC4B,eAAD,CAAnC,CAAA;AACA,EAAA,oBAAOC,eAACC,sBAAD,EAAA;AAAM,IAAA,IAAI,EAAE,kBAAZ;AAAA,IAEF,QAAA,EAAA,CAAA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAA,EAAI7B,QAAQ,CAAC8B,IAAT,CAAc,IAAd,CAAoB,CAAA;AACxB;AACA,CAAA,CAAA;AAlBS,GAAP,CAAA,CAAA;AAqBD;;;;"}